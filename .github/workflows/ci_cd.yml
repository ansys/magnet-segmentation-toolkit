name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

env:
  MAIN_PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'aedt.toolkit.motor.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-aedt-toolkits-motor'
  LIBRARY_NAMESPACE: 'ansys.aedt.toolkits.motor'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: "Build and Smoke tests"
    strategy:
      fail-fast: false
      matrix:
        os : [windows-latest, ubuntu-latest]
        python-version: [ '3.7', '3.10' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: ansys/actions/build-wheelhouse@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          library-namespace: ${{ env.LIBRARY_NAMESPACE }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

  tests_windows_mcad:
    name: "Windows Tests Motor-CAD"
    strategy:
      matrix:
        python-version: [ '3.7', '3.10' ]
      fail-fast: false
    runs-on: [ self-hosted, motorcad, toolkits, Windows ]
    steps:
      - uses: actions/checkout@v3

      - name: Ensure Motor-CAD not open
        run: |
          taskkill /IM Motor-CAD_2023_1_2.exe /F /FI "STATUS eq RUNNING"
          taskkill /IM MotorLABruntime.exe /F /FI "STATUS eq RUNNING"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create Python venv
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1

      - name: Install packages for testing
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install --upgrade build wheel
          pip install .[tests]
        env:
          ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}

      - name: Testing
        timeout-minutes: 30
        run: |
          .\.venv\Scripts\Activate.ps1
          pytest -v --cov=pymotorcad_pyaedt_toolkit --cov-report=term --cov-report=xml:.cov/xml --cov-report=html:.cov/html tests\

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: .cov/html
          retention-days: 7

  tests_windows_aedt:
    name: "Windows Tests"
    strategy:
      matrix:
        python-version: [ '3.7', '3.10' ]
      fail-fast: false
    runs-on: [self-hosted, pyaedt, toolkits, Windows]
    needs: [tests_mcad]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create Python venv
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1

      - name: Install packages for testing
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install --upgrade build wheel
          pip install .[tests]
        env:
          ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}

      - name: Testing
        timeout-minutes: 30
        run: |
          .\.venv\Scripts\Activate.ps1
          pytest -v --cov=pyaedt-toolkit-template --cov-report=xml --junitxml=junit/test-results.xml --cov-report=html tests

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: .cov/html
          retention-days: 7

  doc-build:
    name: "Build documentation"
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - name: update packages
        run: |
          sudo apt-get update

      - name: build doc
        uses: ansys/actions/doc-build@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-deploy-dev:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    needs: [doc-build]
    if: github.event_name == 'push'
    steps:
      - uses: ansys/actions/doc-deploy-dev@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    runs-on: ubuntu-latest
    needs: [doc-deploy-dev]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-stable@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build-library:
    name: "Build library basic example"
    runs-on: ubuntu-latest
    needs: [doc-deploy-stable]
    steps:
      - uses: ansys/actions/build-library@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
